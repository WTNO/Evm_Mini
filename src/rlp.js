/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/rlp@3.0.0/dist/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";function encode(e){if(Array.isArray(e)){const t=[];for(let r=0;r<e.length;r++)t.push(encode(e[r]));const r=concatBytes(...t);return concatBytes(encodeLength(r.length,192),r)}const t=toBytes(e);return 1===t.length&&t[0]<128?t:concatBytes(encodeLength(t.length,128),t)}function safeSlice(e,t,r){if(r>e.length)throw new Error("invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds");return e.slice(t,r)}function decodeLength(e){if(0===e[0])throw new Error("invalid RLP: extra zeros");return parseHexByte(bytesToHex(e))}function encodeLength(e,t){if(e<56)return Uint8Array.from([e+t]);const r=numberToHex(e),n=numberToHex(t+55+r.length/2);return Uint8Array.from(hexToBytes(n+r))}function decode(e,t=!1){if(!e||0===e.length)return Uint8Array.from([]);const r=_decode(toBytes(e));if(t)return r;if(0!==r.remainder.length)throw new Error("invalid RLP: remainder must be zero");return r.data}function _decode(e){let t,r,n,o,i;const s=[],c=e[0];if(c<=127)return{data:e.slice(0,1),remainder:e.slice(1)};if(c<=183){if(t=c-127,n=128===c?Uint8Array.from([]):safeSlice(e,1,t),2===t&&n[0]<128)throw new Error("invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed");return{data:n,remainder:e.slice(t)}}if(c<=191){if(r=c-182,e.length-1<r)throw new Error("invalid RLP: not enough bytes for string length");if(t=decodeLength(safeSlice(e,1,r)),t<=55)throw new Error("invalid RLP: expected string length to be greater than 55");return n=safeSlice(e,r,t+r),{data:n,remainder:e.slice(t+r)}}if(c<=247){for(t=c-191,o=safeSlice(e,1,t);o.length;)i=_decode(o),s.push(i.data),o=i.remainder;return{data:s,remainder:e.slice(t)}}{if(r=c-246,t=decodeLength(safeSlice(e,1,r)),t<56)throw new Error("invalid RLP: encoded list too short");const n=r+t;if(n>e.length)throw new Error("invalid RLP: total length is larger than the data");for(o=safeSlice(e,r,n);o.length;)i=_decode(o),s.push(i.data),o=i.remainder;return{data:s,remainder:e.slice(n)}}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.utils=exports.decode=exports.encode=void 0,exports.encode=encode,exports.decode=decode;const cachedHexes=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));function bytesToHex(e){let t="";for(let r=0;r<e.length;r++)t+=cachedHexes[e[r]];return t}function parseHexByte(e){const t=Number.parseInt(e,16);if(Number.isNaN(t))throw new Error("Invalid byte sequence");return t}function hexToBytes(e){if("string"!=typeof e)throw new TypeError("hexToBytes: expected string, got "+typeof e);if(e.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;r++){const n=2*r;t[r]=parseHexByte(e.slice(n,n+2))}return t}function concatBytes(...e){if(1===e.length)return e[0];const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);for(let t=0,n=0;t<e.length;t++){const o=e[t];r.set(o,n),n+=o.length}return r}function utf8ToBytes(e){return(new TextEncoder).encode(e)}function numberToHex(e){if(e<0)throw new Error("Invalid integer as argument, must be unsigned!");const t=e.toString(16);return t.length%2?`0${t}`:t}function padToEven(e){return e.length%2?`0${e}`:e}function isHexPrefixed(e){return e.length>=2&&"0"===e[0]&&"x"===e[1]}function stripHexPrefix(e){return"string"!=typeof e?e:isHexPrefixed(e)?e.slice(2):e}function toBytes(e){if(e instanceof Uint8Array)return e;if("string"==typeof e)return isHexPrefixed(e)?hexToBytes(padToEven(stripHexPrefix(e))):utf8ToBytes(e);if("number"==typeof e||"bigint"==typeof e)return e?hexToBytes(numberToHex(e)):Uint8Array.from([]);if(null==e)return Uint8Array.from([]);throw new Error("toBytes: received unsupported type "+typeof e)}exports.utils={bytesToHex:bytesToHex,concatBytes:concatBytes,hexToBytes:hexToBytes,utf8ToBytes:utf8ToBytes};const RLP={encode:encode,decode:decode};exports.default=RLP;
//# sourceMappingURL=/sm/f68f00cf69e780e63180c066c906b224e664f49a10fbe14fb717dbe5161c2906.map

